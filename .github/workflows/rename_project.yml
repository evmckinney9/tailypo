name: Rename the project from template

on: [push]

permissions: write-all

jobs:
  check:
    runs-on: ubuntu-latest
    outputs:
      STATUS: ${{ steps.checks.outputs.STATUS }}
    steps:
      - uses: actions/checkout@v3

      - id: checks
        name: Check conditions
        run: |
          if [[ "${{ github.repository }}" != */python-template* ]] && [[ -f .github/template_flag.yml ]]; then
            echo "Entering the if condition"
            echo "STATUS=success" >> $GITHUB_OUTPUT
          else
            echo "Entering the else condition"
            echo "STATUS=failure" >> $GITHUB_OUTPUT
          fi
        shell: bash

  # debug-job:
  #   needs: check
  #   runs-on: ubuntu-latest
  #   steps:
  #     - run: |
  #         echo "The status is ${{ needs.check.outputs.STATUS }}"

  rename-project:
    needs: check
    if: needs.check.outputs.STATUS == 'success'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}

      - uses: actions/github-script@v6
        id: fetch-repo-and-user-details
        with:
          script: |
            const query = `query($owner:String!, $name:String!) {
              repository(owner:$owner, name:$name) {
                name
                description
                owner {
                  login
                  ... on User {
                    name
                  }
                  ... on Organization {
                    name
                  }
                }
              }
            }`;
            const variables = {
              owner: context.repo.owner,
              name: context.repo.repo
            }
            const result = await github.graphql(query, variables)
            console.log(result)
            return result

      - name: Rename the project
        env:
          INFO: ${{ steps.fetch-repo-and-user-details.outputs.result }}
        run: |
          REPO_NAME=$(echo $INFO | jq -r '.repository.name')
          REPO_OWNER=$(echo $INFO | jq -r '.repository.owner.login')
          REPO_OWNER_NAME="$(echo $INFO | jq -r '.repository.owner.name')"
          REPO_DESC="$(echo $INFO | jq -r '.repository.description')"
          echo "Renaming project to $REPO_NAME"
          echo "Description: $REPO_DESC"
          echo "Owner name: $REPO_OWNER_NAME"
          echo "Owner username: $REPO_OWNER"
          .github/scripts/rename_project.sh -a "$REPO_OWNER_NAME" -n "$REPO_NAME" -u "$REPO_OWNER" -d "$REPO_DESC"

      - name: Commit changes and push back to GitHub
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "Initial template rename"
          push_options: --force
